/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MetaMultiSigWallet,
  MetaMultiSigWalletInterface,
} from "../MetaMultiSigWallet";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_chainId",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_owners",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_signaturesRequired",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
    ],
    name: "ExecuteTransaction",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "added",
        type: "bool",
      },
    ],
    name: "Owner",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newSigner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "newSignaturesRequired",
        type: "uint256",
      },
    ],
    name: "addSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "chainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes[]",
        name: "signatures",
        type: "bytes[]",
      },
    ],
    name: "executeTransaction",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nonce",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getTransactionHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "owners",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_hash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "recover",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldSigner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "newSignaturesRequired",
        type: "uint256",
      },
    ],
    name: "removeSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "signaturesRequired",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newSignaturesRequired",
        type: "uint256",
      },
    ],
    name: "updateSignaturesRequired",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052604051620018d9380380620018d9833981016040819052620000269162000279565b81600081116200007d5760405162461bcd60e51b815260206004820152601e60248201527f4d757374206265206e6f6e2d7a65726f2073696773207265717569726564000060448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b03841617815560038490555b84518110156200024a576000858281518110620000bf57620000bf620003a6565b6020026020010151905060006001600160a01b0316816001600160a01b031614156200012e5760405162461bcd60e51b815260206004820152601960248201527f636f6e7374727563746f723a207a65726f206164647265737300000000000000604482015260640162000074565b6001600160a01b03811660009081526001602052604090205460ff1615620001995760405162461bcd60e51b815260206004820152601d60248201527f636f6e7374727563746f723a206f776e6572206e6f7420756e69717565000000604482015260640162000074565b6001600160a01b038116600081815260016020818152604092839020805460ff1916831781556002805493840190557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90920180546001600160a01b031916851790559054915160ff909216151582527ffe545f48304051c4029eb2da9927daa59da0414b4b084fdceaf2955b609b899e910160405180910390a2508062000241816200037c565b9150506200009e565b50505060059290925550620003d29050565b80516001600160a01b03811681146200027457600080fd5b919050565b600080600080608085870312156200029057600080fd5b8451602080870151919550906001600160401b0380821115620002b257600080fd5b818801915088601f830112620002c757600080fd5b815181811115620002dc57620002dc620003bc565b8060051b604051601f19603f83011681018181108582111715620003045762000304620003bc565b604052828152858101935084860182860187018d10156200032457600080fd5b600095505b8386101562000352576200033d816200025c565b85526001959095019493860193860162000329565b508098505050505050506040850151915062000371606086016200025c565b905092959194509250565b60006000198214156200039f57634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6114f780620003e26000396000f3fe6080604052600436106100a05760003560e01c8063545a4a3c11610064578063545a4a3c146101c557806365af1bed146101f35780639a8a059214610213578063affed0e014610229578063ce757d291461023f578063d1fbffa01461025557600080fd5b8063025e7c27146100e657806319045a25146101235780632f54bf6e146101435780633034a742146101835780633bad5426146101a557600080fd5b366100e1576040805134815247602082015233917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15910160405180910390a2005b600080fd5b3480156100f257600080fd5b5061010661010136600461113b565b610282565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561012f57600080fd5b5061010661013e3660046110f4565b6102ac565b34801561014f57600080fd5b5061017361015e366004610fa2565b60016020526000908152604090205460ff1681565b604051901515815260200161011a565b34801561018f57600080fd5b506101a361019e36600461113b565b610316565b005b3480156101b157600080fd5b506101a36101c03660046110c8565b610365565b3480156101d157600080fd5b506101e56101e0366004611154565b6104db565b60405190815260200161011a565b3480156101ff57600080fd5b506101a361020e3660046110c8565b61051a565b34801561021f57600080fd5b506101e560055481565b34801561023557600080fd5b506101e560045481565b34801561024b57600080fd5b506101e560035481565b34801561026157600080fd5b50610275610270366004610fbf565b6106b6565b60405161011a9190611314565b6002818154811061029257600080fd5b6000918252602090912001546001600160a01b0316905081565b600061030f82610309856040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b906109a8565b9392505050565b33301461033e5760405162461bcd60e51b815260040161033590611327565b60405180910390fd5b806000811161035f5760405162461bcd60e51b815260040161033590611349565b50600355565b3330146103845760405162461bcd60e51b815260040161033590611327565b80600081116103a55760405162461bcd60e51b815260040161033590611349565b6001600160a01b03831660009081526001602052604090205460ff1661040d5760405162461bcd60e51b815260206004820152601760248201527f72656d6f76655369676e65723a206e6f74206f776e65720000000000000000006044820152606401610335565b610416836109cc565b60038290556001600160a01b03831660008181526001602090815260409182902054915160ff909216151582527ffe545f48304051c4029eb2da9927daa59da0414b4b084fdceaf2955b609b899e91015b60405180910390a2600054604051632fb7d0a560e21b81526001600160a01b039091169063bedf4294906104a490309060029087906004016112ac565b600060405180830381600087803b1580156104be57600080fd5b505af11580156104d2573d6000803e3d6000fd5b50505050505050565b600030600554868686866040516020016104fa969594939291906111e3565b604051602081830303815290604052805190602001209050949350505050565b3330146105395760405162461bcd60e51b815260040161033590611327565b806000811161055a5760405162461bcd60e51b815260040161033590611349565b6001600160a01b0383166105b05760405162461bcd60e51b815260206004820152601760248201527f6164645369676e65723a207a65726f20616464726573730000000000000000006044820152606401610335565b6001600160a01b03831660009081526001602052604090205460ff16156106195760405162461bcd60e51b815260206004820152601b60248201527f6164645369676e65723a206f776e6572206e6f7420756e6971756500000000006044820152606401610335565b6001600160a01b038316600081815260016020818152604092839020805460ff1916831781556002805493840190557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90920180546001600160a01b0319168517905560038690559054915160ff909216151582527ffe545f48304051c4029eb2da9927daa59da0414b4b084fdceaf2955b609b899e9101610467565b3360009081526001602052604090205460609060ff166107045760405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b6044820152606401610335565b60006107146004548787876104db565b60048054919250600061072683611423565b919050555060008060005b855181101561082757600061075f8588848151811061075257610752611480565b60200260200101516102ac565b9050826001600160a01b0316816001600160a01b0316116107e05760405162461bcd60e51b815260206004820152603560248201527f657865637574655472616e73616374696f6e3a206475706c6963617465206f7260448201527420756e6f726465726564207369676e61747572657360581b6064820152608401610335565b6001600160a01b038116600090815260016020526040902054909250829060ff1615610814578361081081611423565b9450505b508061081f81611423565b915050610731565b506003548210156108925760405162461bcd60e51b815260206004820152602f60248201527f657865637574655472616e73616374696f6e3a206e6f7420656e6f756768207660448201526e616c6964207369676e61747572657360881b6064820152608401610335565b600080896001600160a01b031689896040516108ae919061123e565b60006040518083038185875af1925050503d80600081146108eb576040519150601f19603f3d011682016040523d82523d6000602084013e6108f0565b606091505b5091509150816109425760405162461bcd60e51b815260206004820152601d60248201527f657865637574655472616e73616374696f6e3a207478206661696c65640000006044820152606401610335565b336001600160a01b03167f9053e9ec105157fac8c9308d63e6b22be5f50fe915a3e567419b624311a02d748b8b8b600160045461097f91906113c9565b8a876040516109939695949392919061125a565b60405180910390a29998505050505050505050565b60008060006109b78585610bde565b915091506109c481610c4e565b509392505050565b6001600160a01b0381166000908152600160205260408120805460ff19169055600254908167ffffffffffffffff811115610a0957610a09611496565b604051908082528060200260200182016040528015610a32578160200160208202803683370190505b5090506000610a426001846113c9565b90505b836001600160a01b031660028281548110610a6257610a62611480565b6000918252602090912001546001600160a01b031614610b175760028181548110610a8f57610a8f611480565b9060005260206000200160009054906101000a90046001600160a01b0316828281518110610abf57610abf611480565b60200260200101906001600160a01b031690816001600160a01b0316815250506002805480610af057610af061146a565b600082815260209020810160001990810180546001600160a01b0319169055019055610bc6565b6002805480610b2857610b2861146a565b600082815260209020810160001990810180546001600160a01b0319169055019055805b610b576001856113c9565b811015610bbf576002838281518110610b7257610b72611480565b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b0390921691909117905580610bb781611423565b915050610b4c565b5050505050565b80610bd08161140c565b915050610a45565b50505050565b600080825160411415610c155760208301516040840151606085015160001a610c0987828585610e0c565b94509450505050610c47565b825160401415610c3f5760208301516040840151610c34868383610ef9565b935093505050610c47565b506000905060025b9250929050565b6000816004811115610c6257610c62611454565b1415610c6b5750565b6001816004811115610c7f57610c7f611454565b1415610ccd5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610335565b6002816004811115610ce157610ce1611454565b1415610d2f5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610335565b6003816004811115610d4357610d43611454565b1415610d9c5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610335565b6004816004811115610db057610db0611454565b1415610e095760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610335565b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610e435750600090506003610ef0565b8460ff16601b14158015610e5b57508460ff16601c14155b15610e6c5750600090506004610ef0565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610ec0573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610ee957600060019250925050610ef0565b9150600090505b94509492505050565b6000806001600160ff1b03831681610f1660ff86901c601b6113b1565b9050610f2487828885610e0c565b935093505050935093915050565b600082601f830112610f4357600080fd5b813567ffffffffffffffff811115610f5d57610f5d611496565b610f70601f8201601f1916602001611380565b818152846020838601011115610f8557600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215610fb457600080fd5b813561030f816114ac565b60008060008060808587031215610fd557600080fd5b8435610fe0816114ac565b93506020858101359350604086013567ffffffffffffffff8082111561100557600080fd5b61101189838a01610f32565b9450606088013591508082111561102757600080fd5b818801915088601f83011261103b57600080fd5b81358181111561104d5761104d611496565b8060051b61105c858201611380565b8281528581019085870183870188018e101561107757600080fd5b600093505b848410156110b65780358681111561109357600080fd5b6110a18f8a838b0101610f32565b8452506001939093019291870191870161107c565b50999c989b5096995050505050505050565b600080604083850312156110db57600080fd5b82356110e6816114ac565b946020939093013593505050565b6000806040838503121561110757600080fd5b82359150602083013567ffffffffffffffff81111561112557600080fd5b61113185828601610f32565b9150509250929050565b60006020828403121561114d57600080fd5b5035919050565b6000806000806080858703121561116a57600080fd5b84359350602085013561117c816114ac565b925060408501359150606085013567ffffffffffffffff81111561119f57600080fd5b6111ab87828801610f32565b91505092959194509250565b600081518084526111cf8160208601602086016113e0565b601f01601f19169290920160200192915050565b60006bffffffffffffffffffffffff19808960601b168352876014840152866034840152808660601b16605484015250836068830152825161122c8160888501602087016113e0565b91909101608801979650505050505050565b600082516112508184602087016113e0565b9190910192915050565b60018060a01b038716815285602082015260c06040820152600061128160c08301876111b7565b85606084015284608084015282810360a084015261129f81856111b7565b9998505050505050505050565b60006060820160018060a01b03808716845260206060818601528287548085526080870191508860005282600020945060005b818110156112fd5785548516835260019586019592840192016112df565b505080945050505050826040830152949350505050565b60208152600061030f60208301846111b7565b6020808252600890820152672737ba1029b2b63360c11b604082015260600190565b6020808252601e908201527f4d757374206265206e6f6e2d7a65726f20736967732072657175697265640000604082015260600190565b604051601f8201601f1916810167ffffffffffffffff811182821017156113a9576113a9611496565b604052919050565b600082198211156113c4576113c461143e565b500190565b6000828210156113db576113db61143e565b500390565b60005b838110156113fb5781810151838201526020016113e3565b83811115610bd85750506000910152565b60008161141b5761141b61143e565b506000190190565b60006000198214156114375761143761143e565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610e0957600080fdfea2646970667358221220a89b603bcc30502bec95add77cbead3955ee56f6f10d735558f0d0326453a22364736f6c63430008060033";

type MetaMultiSigWalletConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MetaMultiSigWalletConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MetaMultiSigWallet__factory extends ContractFactory {
  constructor(...args: MetaMultiSigWalletConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MetaMultiSigWallet";
  }

  deploy(
    _chainId: BigNumberish,
    _owners: string[],
    _signaturesRequired: BigNumberish,
    _factory: string,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<MetaMultiSigWallet> {
    return super.deploy(
      _chainId,
      _owners,
      _signaturesRequired,
      _factory,
      overrides || {}
    ) as Promise<MetaMultiSigWallet>;
  }
  getDeployTransaction(
    _chainId: BigNumberish,
    _owners: string[],
    _signaturesRequired: BigNumberish,
    _factory: string,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _chainId,
      _owners,
      _signaturesRequired,
      _factory,
      overrides || {}
    );
  }
  attach(address: string): MetaMultiSigWallet {
    return super.attach(address) as MetaMultiSigWallet;
  }
  connect(signer: Signer): MetaMultiSigWallet__factory {
    return super.connect(signer) as MetaMultiSigWallet__factory;
  }
  static readonly contractName: "MetaMultiSigWallet";
  public readonly contractName: "MetaMultiSigWallet";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MetaMultiSigWalletInterface {
    return new utils.Interface(_abi) as MetaMultiSigWalletInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MetaMultiSigWallet {
    return new Contract(address, _abi, signerOrProvider) as MetaMultiSigWallet;
  }
}
